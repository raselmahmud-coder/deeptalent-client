// demo_test/hook-tests.ts
import { 
    useSession,
    useParticipant,
    useLocalParticipant,
    useTracks,
    useConnectionState,
    useDataChannel,
    useRoomInfo,
    useChat,
    useMediaDeviceSelect,
    TalentSession
  } from '../build/index.esm.js';
  
  console.log('üß™ Hook-Specific Tests');
  console.log('====================');
  
  // Test individual hooks
  function testHooks() {
    console.log('\n1. Testing useSession hook...');
    try {
      console.log('‚úÖ useSession hook available');
    } catch (error) {
      console.error('‚ùå useSession failed:', error);
    }
  
    console.log('\n2. Testing useParticipant hook...');
    try {
      console.log('‚úÖ useParticipant hook available');
    } catch (error) {
      console.error('‚ùå useParticipant failed:', error);
    }
  
    console.log('\n3. Testing useLocalParticipant hook...');
    try {
      console.log('‚úÖ useLocalParticipant hook available');
    } catch (error) {
      console.error('‚ùå useLocalParticipant failed:', error);
    }
  
    console.log('\n4. Testing useTracks hook...');
    try {
      console.log('‚úÖ useTracks hook available');
    } catch (error) {
      console.error('‚ùå useTracks failed:', error);
    }
  
    console.log('\n5. Testing useConnectionState hook...');
    try {
      console.log('‚úÖ useConnectionState hook available');
    } catch (error) {
      console.error('‚ùå useConnectionState failed:', error);
    }
  
    console.log('\n6. Testing useDataChannel hook...');
    try {
      console.log('‚úÖ useDataChannel hook available');
    } catch (error) {
      console.error('‚ùå useDataChannel failed:', error);
    }
  
    console.log('\n7. Testing useRoomInfo hook...');
    try {
      console.log('‚úÖ useRoomInfo hook available');
    } catch (error) {
      console.error('‚ùå useRoomInfo failed:', error);
    }
  
    console.log('\n8. Testing useChat hook...');
    try {
      console.log('‚úÖ useChat hook available');
    } catch (error) {
      console.error('‚ùå useChat failed:', error);
    }
  
    console.log('\n9. Testing useMediaDeviceSelect hook...');
    try {
      console.log('‚úÖ useMediaDeviceSelect hook available');
    } catch (error) {
      console.error('‚ùå useMediaDeviceSelect failed:', error);
    }
  }
  
  testHooks();